"use strict";var ApplicationConfiguration=function(){var applicationModuleName="helpdesk-lite",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("ticketcategories"),ApplicationConfiguration.registerModule("ticketcomments"),ApplicationConfiguration.registerModule("tickets"),ApplicationConfiguration.registerModule("ticketstatuses"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("tickets").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Ticketcategories","ticketcateories","dropdown","/ticketcategories(/create)?"),Menus.addSubMenuItem("topbar","ticketcateories","List Ticketcategories","ticketcateories"),Menus.addSubMenuItem("topbar","ticketcateories","New Ticketcategories","ticketcateories/create")}]),angular.module("ticketcategories").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTicketcategories",{url:"/ticketcategories",templateUrl:"modules/ticketcategories/views/list-ticketcategories.client.view.html"}).state("createTicketcategory",{url:"/ticketcategories/create",templateUrl:"modules/ticketcategories/views/create-ticketcategory.client.view.html"}).state("viewTicketsInCategory",{url:"/ticketcategories/:ticketcategoryId/tickets",templateUrl:"modules/ticketcategories/views/view-ticketcategory.client.view.html"}).state("editTicketcategory",{url:"/ticketcategories/:ticketcategoryId/edit",templateUrl:"modules/ticketcategories/views/edit-ticketcategory.client.view.html"})}]),angular.module("ticketcategories").controller("TicketcategoriesController",["$scope","$stateParams","$location","Authentication","Ticketcategories","Tickets",function($scope,$stateParams,$location,Authentication,Ticketcategories){$scope.authentication=Authentication,$scope.create=function(){var ticketcategory=new Ticketcategories({name:this.name});ticketcategory.$save(function(response){$location.path("ticketcategories/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(ticketcategory){if(ticketcategory){ticketcategory.$remove();for(var i in $scope.ticketcategories)$scope.ticketcategories[i]===ticketcategory&&$scope.ticketcategories.splice(i,1)}else $scope.ticketcategory.$remove(function(){$location.path("ticketcategories")})},$scope.update=function(){var ticketcategory=$scope.ticketcategory;ticketcategory.$update(function(){$location.path("ticketcategories/"+ticketcategory._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.ticketcategories=Ticketcategories.query()},$scope.findOne=function(){$scope.ticketcategory=Ticketcategories.get({ticketcategoryId:$stateParams.ticketcategoryId})}}]),angular.module("ticketcategories").factory("Ticketcategories",["$resource",function($resource){return $resource("ticketcategories/:ticketcategoryId",{ticketcategoryId:"@_id"},{update:{method:"PUT"}})}]),angular.module("ticketcomments").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTicketcomments",{url:"/ticketcomments",templateUrl:"modules/ticketcomments/views/list-ticketcomments.client.view.html"}).state("createTicketcomment",{url:"/ticketcomments/create",templateUrl:"modules/ticketcomments/views/create-ticketcomment.client.view.html"}).state("viewTicketcomment",{url:"/ticketcomments/:ticketcommentId",templateUrl:"modules/ticketcomments/views/view-ticketcomment.client.view.html"}).state("editTicketcomment",{url:"/ticketcomments/:ticketcommentId/edit",templateUrl:"modules/ticketcomments/views/edit-ticketcomment.client.view.html"})}]),angular.module("ticketcomments").controller("TicketcommentsController",["$scope","$stateParams","$location","Authentication","Ticketcomments",function($scope,$stateParams,$location,Authentication,Ticketcomments){$scope.authentication=Authentication,$scope.create=function(){var ticketcomment=new Ticketcomments({name:this.name});ticketcomment.$save(function(response){$location.path("ticketcomments/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(ticketcomment){if(ticketcomment){ticketcomment.$remove();for(var i in $scope.ticketcomments)$scope.ticketcomments[i]===ticketcomment&&$scope.ticketcomments.splice(i,1)}else $scope.ticketcomment.$remove(function(){$location.path("ticketcomments")})},$scope.update=function(){var ticketcomment=$scope.ticketcomment;ticketcomment.$update(function(){$location.path("ticketcomments/"+ticketcomment._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.ticketcomments=Ticketcomments.query()},$scope.findOne=function(){$scope.ticketcomment=Ticketcomments.get({ticketcommentId:$stateParams.ticketcommentId})}}]),angular.module("ticketcomments").factory("Ticketcomments",["$resource",function($resource){return $resource("tickets/:ticketId/comments/:commentId",{commentId:"@_id"},{update:{method:"PUT"}})}]),angular.module("tickets").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Tickets","tickets","dropdown","/tickets(/create)?"),Menus.addSubMenuItem("topbar","tickets","List Tickets","tickets"),Menus.addSubMenuItem("topbar","tickets","New Ticket","tickets/create")}]),angular.module("tickets").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTickets",{url:"/tickets",templateUrl:"modules/tickets/views/list-tickets.client.view.html"}).state("createTicket",{url:"/tickets/create",templateUrl:"modules/tickets/views/create-ticket.client.view.html"}).state("viewTicket",{url:"/tickets/:ticketId",templateUrl:"modules/tickets/views/view-ticket.client.view.html"}).state("editTicket",{url:"/tickets/:ticketId/edit",templateUrl:"modules/tickets/views/edit-ticket.client.view.html"})}]),angular.module("tickets").controller("TicketsController",["$scope","$stateParams","$location","Authentication","TicketsByCategory","Tickets","Ticketcategories","Ticketcomments",function($scope,$stateParams,$location,Authentication,TicketsByCategory,Tickets,Ticketcategories,Ticketcomments){$scope.authentication=Authentication,$scope.ticketcategories=Ticketcategories.query(),$scope.create=function(){var ticket=new TicketsByCategory({name:this.name,description:this.description,due:this.due});ticket.$save({ticketCategoryId:$scope.ticketcategory},function(response){$location.path("tickets/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.postComment=function(){var comment=new Ticketcomments({comment:this.ticketcomment});comment.$save({ticketId:$stateParams.ticketId},function(resp){$scope.comments.push(resp)}),$scope.ticketcomment=""},$scope.remove=function(ticket){if(ticket){ticket.$remove({ticketId:ticket.data._id});for(var i in $scope.tickets)$scope.tickets[i]===ticket&&$scope.tickets.splice(i,1)}else $scope.ticket.$remove(function(){$location.path("tickets/")})},$scope.update=function(){var ticket=$scope.ticket;ticket.$update(function(){$location.path("tickets/"+ticket.data._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){Tickets.query({},function(response){$scope.tickets=response[0].data,$scope.recentTickets=[];for(var i=0;5>i;i++)$scope.recentTickets.push(response[0].data[i])})},$scope.findOne=function(){$scope.ticket=Tickets.get({ticketId:$stateParams.ticketId}),$scope.comments=Ticketcomments.query({ticketId:$stateParams.ticketId})},$scope.today=function(){$scope.due=new Date},$scope.today(),$scope.clear=function(){$scope.due=null},$scope.disabled=function(date,mode){return"day"===mode&&(0===date.getDay()||6===date.getDay())},$scope.toggleMin=function(){$scope.minDate=$scope.minDate?null:new Date},$scope.toggleMin(),$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0},$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","longDate"],$scope.format=$scope.formats[0]}]),angular.module("tickets").factory("Tickets",["$resource",function($resource){return $resource("tickets/:ticketId",{ticketId:"@_id"},{update:{method:"PUT"}})}]),angular.module("tickets").factory("TicketsByCategory",["$resource",function($resource){return $resource("ticketcategories/:ticketCategoryId/tickets/:ticketId",{ticketId:"@_id"},{update:{method:"PUT"}})}]),angular.module("ticketstatuses").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTicketstatuses",{url:"/ticketstatuses",templateUrl:"modules/ticketstatuses/views/list-ticketstatuses.client.view.html"}).state("createTicketstatus",{url:"/ticketstatuses/create",templateUrl:"modules/ticketstatuses/views/create-ticketstatus.client.view.html"}).state("viewTicketstatus",{url:"/ticketstatuses/:ticketstatusId",templateUrl:"modules/ticketstatuses/views/view-ticketstatus.client.view.html"}).state("editTicketstatus",{url:"/ticketstatuses/:ticketstatusId/edit",templateUrl:"modules/ticketstatuses/views/edit-ticketstatus.client.view.html"})}]),angular.module("ticketstatuses").controller("TicketstatusesController",["$scope","$stateParams","$location","Authentication","Ticketstatuses",function($scope,$stateParams,$location,Authentication,Ticketstatuses){$scope.authentication=Authentication,$scope.create=function(){var ticketstatus=new Ticketstatuses({name:this.name});ticketstatus.$save(function(response){$location.path("ticketstatuses/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(ticketstatus){if(ticketstatus){ticketstatus.$remove();for(var i in $scope.ticketstatuses)$scope.ticketstatuses[i]===ticketstatus&&$scope.ticketstatuses.splice(i,1)}else $scope.ticketstatus.$remove(function(){$location.path("ticketstatuses")})},$scope.update=function(){var ticketstatus=$scope.ticketstatus;ticketstatus.$update(function(){$location.path("ticketstatuses/"+ticketstatus._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.ticketstatuses=Ticketstatuses.query()},$scope.findOne=function(){$scope.ticketstatus=Ticketstatuses.get({ticketstatusId:$stateParams.ticketstatusId})}}]),angular.module("ticketstatuses").factory("Ticketstatuses",["$resource",function($resource){return $resource("ticketstatuses/:ticketstatusId",{ticketstatusId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);